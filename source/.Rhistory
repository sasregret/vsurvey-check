j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
k = 3
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
vlist
shortened = vector()
end = F
j = 1
j <= length(vlist)
i = 2
value = vector()
start = vlist[[j]][i-1]
start
is.na(vlist[[j]][i])
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
end == F
end
F
!end
end = FALSE
!end
!end
is.na(vlist[[j]][i])
k = 3
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
end = FALSE
j = 1
end
# The purpose of this script is to shorten the vversion vectors to be easier to read.
vlists <- vlist.vversion[, grep("vlist", names(vlist.vversion), value = T)]
# Create the list of numeric vectors for each vlist
for (j in names(vlists)) # j = 1
{
listofvects = list()
for (i in 1:nrow(vlists)) # i = 1
{
charvector = vlists[i,j]
numvector = list(as.numeric(as.vector(unlist(strsplit(charvector, ",")))))
listofvects = c(listofvects, numvector)
}
assign(paste(j, ".long", sep = ""), listofvects)
}
# The key below is used to loop through your lists
# Each of the key number corresponds to a vlist number
key = substr(names(vlists), 7, 8)
# Create the new data frame of shortened values
raw <- vlist.vversion$raw
output = data.frame(raw)
for (k in key) # k = 3
{
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
while (j <= length(vlist)) # j = 1
{
i = 2
value = vector()
start = vlist[[j]][i-1]
if (is.na(vlist[[j]][i]))
{
while (is.na(vlist[[j]][i]) & !final)
{
if (j < length(vlist))
{
shortened = c(shortened, paste("c(", start, ")", sep = ""))
j = j + 1
start = vlist[[j]][i-1]
} else {
shortened = c(shortened, paste("c(", start, ")", sep = ""))
final = T
}
}
}
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
if (!final)
{
if (vlist[[j]][i-1] == (vlist[[j]][i] - 1))
{
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", hanging, sep = ""))
} else {
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", end, sep = ""), as.character(hanging))
}
shortened = c(shortened, paste("c(", paste(value, collapse = ","), ")", sep = ""))
}
j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
}
head(output)
write.csv(output, paste0(macro$path, "vsurvey check/output/vsurvey.csv"), row.names = FALSE)
# The purpose of this script is to shorten the vversion vectors to be easier to read.
vlists <- vlist.vversion[, grep("vlist", names(vlist.vversion), value = T)]
# Create the list of numeric vectors for each vlist
for (j in names(vlists)) # j = 1
{
listofvects = list()
for (i in 1:nrow(vlists)) # i = 1
{
charvector = vlists[i,j]
numvector = list(as.numeric(as.vector(unlist(strsplit(charvector, ",")))))
listofvects = c(listofvects, numvector)
}
assign(paste(j, ".long", sep = ""), listofvects)
}
# The key below is used to loop through your lists
# Each of the key number corresponds to a vlist number
key = substr(names(vlists), 7, 8)
# Create the new data frame of shortened values
raw <- vlist.vversion$raw
output = data.frame(raw)
for (k in key) # k = 3
{
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
while (j <= length(vlist)) # j = 1
{
i = 2
value = vector()
start = vlist[[j]][i-1]
if (is.na(vlist[[j]][i]))
{
while (is.na(vlist[[j]][i]) & !final)
{
if (j < length(vlist))
{
shortened = c(shortened, paste("c(", start, ")", sep = ""))
j = j + 1
start = vlist[[j]][i-1]
} else {
shortened = c(shortened, paste("c(", start, ")", sep = ""))
final = T
}
}
}
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
if (!final)
{
if (vlist[[j]][i-1] == (vlist[[j]][i] - 1))
{
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", hanging, sep = ""))
} else {
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", end, sep = ""), as.character(hanging))
}
shortened = c(shortened, paste("c(", paste(value, collapse = ","), ")", sep = ""))
}
j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
}
head(output)
write.csv(output, paste0(macro$path, "vsurvey check/output/vsurvey.csv"), row.names = FALSE)
k = 3
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
j <= length(vlist)
i = 2
value = vector()
start = vlist[[j]][i-1]
value
start
is.na(vlist[[j]][i])
vlist[[j]][i-1] != (vlist[[j]][i] - 1)
vlist[[j]][i]
end = vlist[[j]][i-1]
end != start
start
end
value = c(value, as.character(end))
value
start = vlist[[j]][i]
start
i = i + 1
i
i < length(vlist[[j]])
length(vlist[[j]])
!final
vlist[[j]][i-1] == (vlist[[j]][i] - 1)
start
end
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
end
hanging = vlist[[j]][i]
(hanging
)
# The purpose of this script is to shorten the vversion vectors to be easier to read.
vlists <- vlist.vversion[, grep("vlist", names(vlist.vversion), value = T)]
# Create the list of numeric vectors for each vlist
for (j in names(vlists)) # j = 1
{
listofvects = list()
for (i in 1:nrow(vlists)) # i = 1
{
charvector = vlists[i,j]
numvector = list(as.numeric(as.vector(unlist(strsplit(charvector, ",")))))
listofvects = c(listofvects, numvector)
}
assign(paste(j, ".long", sep = ""), listofvects)
}
# The key below is used to loop through your lists
# Each of the key number corresponds to a vlist number
key = substr(names(vlists), 7, 8)
# Create the new data frame of shortened values
raw <- vlist.vversion$raw
output = data.frame(raw)
for (k in key) # k = 3
{
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
while (j <= length(vlist)) # j = 1
{
i = 2
value = vector()
start = vlist[[j]][i-1]
if (is.na(vlist[[j]][i]))
{
while (is.na(vlist[[j]][i]) & !final)
{
if (j < length(vlist))
{
shortened = c(shortened, paste("c(", start, ")", sep = ""))
j = j + 1
start = vlist[[j]][i-1]
} else {
shortened = c(shortened, paste("c(", start, ")", sep = ""))
final = T
}
}
}
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
if (!final)
{
if (vlist[[j]][i-1] == (vlist[[j]][i] - 1))
{
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", hanging, sep = ""))
} else {
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
hanging = vlist[[j]][i]
if (start != end)
{
value = c(value, paste(start, ":", end, sep = ""), as.character(hanging))
} else {
value = c(value, paste(start, as.character(hanging))
}
}
shortened = c(shortened, paste("c(", paste(value, collapse = ","), ")", sep = ""))
}
j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
}
head(output)
write.csv(output, paste0(macro$path, "vsurvey check/output/vsurvey.csv"), row.names = FALSE)
# The purpose of this script is to shorten the vversion vectors to be easier to read.
vlists <- vlist.vversion[, grep("vlist", names(vlist.vversion), value = T)]
# Create the list of numeric vectors for each vlist
for (j in names(vlists)) # j = 1
{
listofvects = list()
for (i in 1:nrow(vlists)) # i = 1
{
charvector = vlists[i,j]
numvector = list(as.numeric(as.vector(unlist(strsplit(charvector, ",")))))
listofvects = c(listofvects, numvector)
}
assign(paste(j, ".long", sep = ""), listofvects)
}
# The key below is used to loop through your lists
# Each of the key number corresponds to a vlist number
key = substr(names(vlists), 7, 8)
# Create the new data frame of shortened values
raw <- vlist.vversion$raw
output = data.frame(raw)
for (k in key) # k = 3
{
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
while (j <= length(vlist)) # j = 1
{
i = 2
value = vector()
start = vlist[[j]][i-1]
if (is.na(vlist[[j]][i]))
{
while (is.na(vlist[[j]][i]) & !final)
{
if (j < length(vlist))
{
shortened = c(shortened, paste("c(", start, ")", sep = ""))
j = j + 1
start = vlist[[j]][i-1]
} else {
shortened = c(shortened, paste("c(", start, ")", sep = ""))
final = T
}
}
}
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
if (!final)
{
if (vlist[[j]][i-1] == (vlist[[j]][i] - 1))
{
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", hanging, sep = ""))
} else {
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
hanging = vlist[[j]][i]
if (start != end)
{
value = c(value, paste(start, ":", end, sep = ""), as.character(hanging))
} else {
value = c(value, paste(start, as.character(hanging)))
}
}
shortened = c(shortened, paste("c(", paste(value, collapse = ","), ")", sep = ""))
}
j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
}
# The purpose of this script is to shorten the vversion vectors to be easier to read.
vlists <- vlist.vversion[, grep("vlist", names(vlist.vversion), value = T)]
# Create the list of numeric vectors for each vlist
for (j in names(vlists)) # j = 1
{
listofvects = list()
for (i in 1:nrow(vlists)) # i = 1
{
charvector = vlists[i,j]
numvector = list(as.numeric(as.vector(unlist(strsplit(charvector, ",")))))
listofvects = c(listofvects, numvector)
}
assign(paste(j, ".long", sep = ""), listofvects)
}
# The key below is used to loop through your lists
# Each of the key number corresponds to a vlist number
key = substr(names(vlists), 7, 8)
# Create the new data frame of shortened values
raw <- vlist.vversion$raw
output = data.frame(raw)
for (k in key) # k = 3
{
vlist = eval(parse(text = paste("vlist.", k, ".long", sep = "")))
shortened = vector()
final = FALSE
j = 1
while (j <= length(vlist)) # j = 1
{
i = 2
value = vector()
start = vlist[[j]][i-1]
if (is.na(vlist[[j]][i]))
{
while (is.na(vlist[[j]][i]) & !final)
{
if (j < length(vlist))
{
shortened = c(shortened, paste("c(", start, ")", sep = ""))
j = j + 1
start = vlist[[j]][i-1]
} else {
shortened = c(shortened, paste("c(", start, ")", sep = ""))
final = T
}
}
}
while (i < length(vlist[[j]]))
{
if (vlist[[j]][i-1] != (vlist[[j]][i] - 1))
{
end = vlist[[j]][i-1]
if (end != start)
{
value = c(value, paste(start, ":", end, sep = ""))
}
else
{
value = c(value, as.character(end))
}
start = vlist[[j]][i]
}
i = i + 1
}
if (!final)
{
if (vlist[[j]][i-1] == (vlist[[j]][i] - 1))
{
hanging = vlist[[j]][i]
value = c(value, paste(start, ":", hanging, sep = ""))
} else {
(vlist[[j]][i-1] != (vlist[[j]][i] - 1))
end = vlist[[j]][i-1]
hanging = vlist[[j]][i]
if (start != end)
{
value = c(value, paste(start, ":", end, sep = ""), as.character(hanging))
} else {
value = c(value, start, as.character(hanging))
}
}
shortened = c(shortened, paste("c(", paste(value, collapse = ","), ")", sep = ""))
}
j = j + 1
}
output[,paste("vlist.", k, sep = "")] = shortened
}
head(output)
write.csv(output, paste0(macro$path, "vsurvey check/output/vsurvey.csv"), row.names = FALSE)
source(paste0(macro$path, "vsurvey check/source/04.Output.R"))
source(paste0(macro$path, "vsurvey check/source/05.Shortener.R"))
